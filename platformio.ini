; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:nodemcuv2]
platform = espressif8266@3.0.0
board = nodemcuv2
framework = arduino
board_build.f_cpu = 160000000L

monitor_speed = 115200

lib_deps = https://github.com/lorol/ESPAsyncWebServer, ArduinoJson

#the script below regenerates
#the HTML page using webpack 
#the config objects
#the certificate store
extra_scripts = scripts/preBuild.py

#available build flags:
#-DREBUILD_HTML forces a rebuild of the html.h, this is needed if you make modifications to the GUI, or the configuration or dashboard JSON files
#-DREBUILD_CERTS forces a rebuild of the root certificate store
#-DOPENSSL="C:/Program Files/Git/usr/bin/openssl.exe" Path to openssl executable
#-DREBUILD_CONFIG forces a rebuild of the configuration manager cpp files based on the JSON
#-DREBUILD_DASHBOARD forces a rebuild of the dashboard cpp files based on the JSON
#-DDOMAIN_LIST=google.com,maakbaas.com comma separated list of domain names to limit the certificates included
#-DCONFIG_PATH=configuration.json defines a custom location for your JSON file
#-DDASHBOARD_PATH=dashboard.json defines a custom location for your JSON file


# TODO: Cleanup...
#[env:heltec_wifi_kit_32]
# board = heltec_wifi_kit_32
[env:esp32dev]
platform = espressif32
board = esp32dev
lib_ldf_mode = deep+
framework = arduino
monitor_speed = 115200
lib_deps = 
    ESP Async WebServer
    ArduinoJson
    LittleFS_esp32
extra_scripts = scripts/preBuild.py
build_flags = -DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG

